var ingoose;!function(ingoose){var SchemaRegistry;!function(SchemaRegistry){function upsertAll(schemas){for(var name in schemas)schemas.hasOwnProperty(name)&&"object"==typeof schemas[name]&&validate(schemas[name])&&(_SchemaRegistry[name]=schemas[name])}function validate(schemaLike){return!!schemaLike.keyPath}function all(){return _SchemaRegistry}function get(name){var schema=_SchemaRegistry[name];return schema&&"object"==typeof schema?_SchemaRegistry[name]:null}function keyOf(name){var schema=get(name);return schema?schema.keyPath:""}var _SchemaRegistry={};SchemaRegistry.upsertAll=upsertAll,SchemaRegistry.all=all,SchemaRegistry.get=get,SchemaRegistry.keyOf=keyOf}(SchemaRegistry=ingoose.SchemaRegistry||(ingoose.SchemaRegistry={}))}(ingoose||(ingoose={}));var ingoose;!function(ingoose){function connect(dbname,version){var openRequest=indexedDB.open(dbname,version);return new PromiseOpen(openRequest)}function close(){ingoose._db.close()}ingoose._db;var PromiseOpen=function(){function PromiseOpen(openRequest){this.openRequest=openRequest}return PromiseOpen.prototype.schemas=function(schemas){return ingoose.SchemaRegistry.upsertAll(schemas),this.openRequest.onupgradeneeded=function(ev){ingoose._db=ev.target.result,ev.target.transaction.onerror=function(err){throw new Error("xxx00: "+err.toString())};for(var name in ingoose.SchemaRegistry.all())ingoose._db.objectStoreNames.contains(name)&&ingoose._db.deleteObjectStore(name),ingoose._db.createObjectStore(name,ingoose.SchemaRegistry.get(name))},this.success(),this},PromiseOpen.prototype.error=function(onerror){return void 0===onerror&&(onerror=function(){}),this.openRequest.onerror=onerror,this},PromiseOpen.prototype.success=function(onsuccess){var _this=this;return void 0===onsuccess&&(onsuccess=function(){}),this.openRequest.onsuccess=function(){ingoose._db=_this.openRequest.result,onsuccess()},this},PromiseOpen}();ingoose.PromiseOpen=PromiseOpen,ingoose.connect=connect,ingoose.close=close}(ingoose||(ingoose={}));var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype,d.prototype=new __},ingoose;!function(ingoose){function model(modelName,opt){void 0===opt&&(opt={}),ingoose.SchemaRegistry.get(modelName)||errorUnregisteredModel(modelName);var ActiveModel=function(props){return void 0===props&&(props={}),void 0!=props[ingoose.SchemaRegistry.keyOf(ActiveModel.__modelName)]||ingoose.SchemaRegistry.get(ActiveModel.__modelName).autoIncrement?void Model.call(this,ActiveModel.__modelName,props):errorMissingRequiredProperty(ingoose.SchemaRegistry.keyOf(ActiveModel.__modelName),"keyPath")};return ActiveModel.__modelName=modelName,ActiveModel.prototype=Model.prototype,ActiveModel.__core=new HotCore(ingoose._db,ActiveModel.__modelName),ActiveModel.find=function(query){return Model.proxyFind(ActiveModel.__core,query,function(props){return new ActiveModel(props)})},ActiveModel.clear=function(){return Model.proxyClear(ActiveModel.__core)},ActiveModel}function errorUnregisteredModel(modelName){throw new Error("Unregistered model `"+modelName+"`")}function errorMissingRequiredProperty(propName,reason){throw new Error("Missing required property `"+propName+"` ("+reason+")")}var PromiseModelTx=function(){function PromiseModelTx(cursorRequest,onsuccess,upperError){void 0===onsuccess&&(onsuccess=function(req,cb){cb()}),void 0===upperError&&(upperError=null),this.cursorRequest=cursorRequest,this.onsuccess=onsuccess,this.upperError=upperError}return PromiseModelTx.prototype.success=function(cb){var _this=this;return this.cursorRequest.onsuccess=function(){_this.onsuccess(_this.cursorRequest,cb)},this},PromiseModelTx.prototype.error=function(cb){return 0==!!this.cursorRequest?(cb(this.upperError),this):(this.cursorRequest.onerror=cb,this)},PromiseModelTx}();ingoose.PromiseModelTx=PromiseModelTx;var PromiseFindTx=function(_super){function PromiseFindTx(factory,query,cursorRequest,onsuccess,upperError){void 0===upperError&&(upperError=null),_super.call(this,cursorRequest,onsuccess,upperError),this.factory=factory,this.query=query}return __extends(PromiseFindTx,_super),PromiseFindTx.prototype.success=function(cb){var _this=this;if(void 0!==this.query.only)return this.cursorRequest.onsuccess=function(ev){if(!ev.target||!ev.target.result)return cb();var res=_this.factory(ev.target.result.value);return cb(res)},this;var res=[];return this.cursorRequest.onsuccess=function(ev){if(!ev.target||!ev.target.result)return cb(res);var result=ev.target.result;res.push(_this.factory(result.value)),result["continue"]()},this},PromiseFindTx}(PromiseModelTx);ingoose.PromiseFindTx=PromiseFindTx;var HotCore=function(){function HotCore(db,modelName){this.db=db,this.modelName=modelName}return HotCore.prototype.tx=function(){return this.db.transaction([this.modelName],"readwrite")},HotCore.prototype.objectStore=function(){return this.tx().objectStore(this.modelName)},HotCore.prototype.range=function(query){return HotCore.range(query)},HotCore.range=function(query){if(void 0!==query.only)return IDBKeyRange.only(query.only);if(void 0==query.min&&void 0==query.max)throw"This is TODO";return void 0==query.min?IDBKeyRange.upperBound(query.max):void 0==query.max?IDBKeyRange.lowerBound(query.min):IDBKeyRange.bound(query.min,query.max)},HotCore}(),_Model=function(){function _Model(__core){this.__core=__core}return _Model.prototype.save=function(){var _this=this,store=this.__core.objectStore(),toBeStored={};for(var i in this)this.hasOwnProperty(i)&&"__core"!=String(i)&&(toBeStored[i]=this[i]);var req=store.put(toBeStored);return new PromiseModelTx(req,function(req,done){var schema=ingoose.SchemaRegistry.get(_this.__core.modelName);1==schema.autoIncrement&&(_this[schema.keyPath]=req.result),done(_this)})},_Model.prototype.remove=function(){var store=this.__core.objectStore(),key=this[ingoose.SchemaRegistry.keyOf(this.__core.modelName)],request=store["delete"](key);return new PromiseModelTx(request)},_Model.proxyFind=function(__core,query,facotry){var store=__core.objectStore(),range=__core.range(query),request=store.openCursor(range),onsuccess=function(req,cb){cb()};return new PromiseFindTx(facotry,query,request,onsuccess)},_Model.proxyClear=function(__core){var store=__core.objectStore(),request=store.clear();return new PromiseModelTx(request)},_Model}(),Model=function(_super){function Model(modelName,props){var __core=new HotCore(ingoose._db,modelName);_super.call(this,__core);for(var i in props)props.hasOwnProperty(i)&&(this[i]=props[i])}return __extends(Model,_super),Model}(_Model);ingoose.Model=Model,ingoose.model=model}(ingoose||(ingoose={}));